# Proxy traffic for new-langchain.chiefaiofficer.id to the uvicorn service on port 8123
map $http_upgrade $connection_upgrade {
    default upgrade;
    '' close;
}

# HTTP-only block used for Certbot validation. Leave this active until certificates exist.
server {
    listen 80;
    listen [::]:80;
    server_name new-langchain.chiefaiofficer.id;

    root /var/www/certbot;
    index index.html;

    # Allow Certbot to complete HTTP-01 challenges
    location /.well-known/acme-challenge/ {
        allow all;
        try_files $uri =404;
    }

    # Simple endpoint for testing reachability
    location = /certbot-test.txt {
        default_type text/plain;
        return 200 "ok";
    }

    # Once HTTPS is enabled, redirect everything else
    location / {
        return 301 https://$host$request_uri;
    }
}

# HTTPS server block should be enabled only after certificates are issued.
# Uncomment the listen directives and reload nginx after running Certbot successfully.
server {
    #listen 443 ssl http2;
    #listen [::]:443 ssl http2;
    server_name new-langchain.chiefaiofficer.id;

    ssl_certificate /etc/letsencrypt/live/new-langchain.chiefaiofficer.id/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/new-langchain.chiefaiofficer.id/privkey.pem;
    include /etc/letsencrypt/options-ssl-nginx.conf;
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem;

    access_log /var/log/nginx/new-langchain.access.log;
    error_log /var/log/nginx/new-langchain.error.log warn;

    # Basic security hardening
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header Referrer-Policy "strict-origin-when-cross-origin" always;
    add_header X-XSS-Protection "1; mode=block" always;

    client_max_body_size 25m;

    # Enforce HSTS (after confirming HTTPS works)
    add_header Strict-Transport-Security "max-age=63072000; includeSubDomains; preload" always;

    # Proxy API traffic to uvicorn
    location / {
        proxy_pass http://127.0.0.1:8123;
        proxy_set_header Host $host;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-Host $host;

        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection $connection_upgrade;

        proxy_http_version 1.1;
        proxy_buffering off;
    }

    location /health {
        proxy_pass http://127.0.0.1:8123/health;
        proxy_set_header Host $host;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }
}
